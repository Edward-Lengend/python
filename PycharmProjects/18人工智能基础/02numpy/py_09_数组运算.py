import numpy as np

# 数组和数字的运算
arr_1 = np.array([1, 2, 3, 4])
print(arr_1+1)  # 所有值加一， 加减乘除都能运算

# 数组和数组的运算（满足两条中的任意一条即可运算）
# 一、两个数组要同维度

# 二、 当两个数组的形状并不相同的时候，我们可以通过扩展数组的方法来实现相加、相减、相乘等操作，这种机制叫做广播
# 1.若两个数组的后缘维度（从末尾开始算起的维度）的轴长度相符，或其中的一方的长度为1，则认为它们是广播兼容的。
#    广播会在缺失和（或）长度为1的维度上进行。
#    例如
#     arr1 = np.array([[0, 0, 0],[1, 1, 1],[2, 2, 2], [3, 3, 3]])  #arr1.shape = (4,3)
#     arr2 = np.array([1, 2, 3])    #arr2.shape = (3,)
#                   arr1.shape = (4,3)
#                   arr2.shape =   (3,)
#                        从后往前看，最后面几个都一样即可
# 2.不能满足1，满足2也可 -> 数组维度相同，其中有个轴为1

# arr1 = np.array([[0, 0, 0],[1, 1, 1],[2, 2, 2], [3, 3, 3]])  #arr1.shape = (4,3)
# arr2 = np.array([[1],[2],[3],[4]])    #arr2.shape = (4, 1)
#
# arr_sum = arr1 + arr2
# print(arr_sum)
#
# 输出结果如下：
# [[1 1 1]
#  [3 3 3]
#  [5 5 5]
#  [7 7 7]]
#
# arr1的shape为（4,3），arr2的shape为（4,1），它们都是二维的，但是第二个数组在1轴上的长度为1，
# 所以，可以在1轴上面进行广播
# 在这种情况下，两个数组的维度要保证相等，其中有一个轴的长度为1，
# 这样就会沿着长度为1的轴进行扩展。这样的例子还有：（4,6）和（1,6） 。（3,5,6）和
# （1,5,6）、（3,1,6）、（3,5,1），后面三个分别会沿着0轴，1轴，2轴进行广播。